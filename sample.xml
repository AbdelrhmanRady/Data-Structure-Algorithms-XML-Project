<users>
    <user>
        <id>1</id>
        <name>Ahmed Ali</name>
        </posts>
    </user>
    <user>
        <id>2</id>
        <name>Yasser Ahmed</name>
        <followers>
            <follower>
                <id>1</id>
            </follower>
        </followers>
    </user
    <user>
        <id>3</id>
        <name>Mohamed Sherif</name>
        </posts>
    </user>
</users>



public class ArrStack {
    private Object[] data;
    private int size=0;
    private int index=0;

    public ArrStack() {
        this.size = 100;
        data = new Object[this.size];
    }
    public void push(String o) {
        if (index >= size) {
            this.increaseSize();
        }
        this.data[index] = o;
        index++;
    }

    public Object pop() {
        if (index != 0) {
            Object obj = data[index - 1];
            this.data[index - 1] = null;
            index--;
            return obj;
        } else {
            return null;
        }
    }

    public Object top() throws RuntimeException {
        if (index != 0) {
            return this.data[index - 1];
        } else {
            return null;
        }
    }

    public boolean isEmpty() {
        return index == 0;
    }

    private void increaseSize() {
        Object[] temp = new Object[size];
        size = size * 2;
        for (int i = 0; i < index; i++) {
            temp[i] = this.data[i];
        }
        this.data = new Object[this.size];
        for (int i = 0; i < index; i++) {
            this.data[i] = temp[i];
        }
    }
}



package application;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Validator extends ArrStack{

    public Validator()
    {
    }

    boolean isCorrect(String XML)
    {
        Pattern bracket1 = Pattern.compile("<");
        Matcher matcher1 = bracket1.matcher(XML);
        Pattern bracket2 = Pattern.compile(">");
        Matcher matcher2 = bracket2.matcher(XML);
        int push =0;
        int pop =0;
        while(matcher1.find()) {
            push("<");
            push++;
            if (matcher2.find()) {
                pop();
                pop++;
            }
        }
        System.out.println(push);
        System.out.println(pop);
        if(top()==null)
        {
            System.out.println("true");
            return true;
        }
        else {
            System.out.println("false");
            return false;
        }
    }
}

